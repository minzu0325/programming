REST API
 - REST(Representational State Transfer)
   - 인터넷 상의 컴퓨터 시스템간 상호 운용성을 제공하는 방법 중 하나
   - HTTP 기반으로 필요한 자원에 접근하는 방식을 정해놓은 네트워크 아키텍처
      * 자원 : 저장된 데이터(DBMS 등)는 물론, 이미지/동영상/문서(PDF 등)와 같은 파일, 서비스(이메일 전송, 푸쉬 메시지 등) 등을 모두 포함
      
 - REST의 제약조건
   - 클라이언트/서버: 클라이언트와 서버 각각의 역할 구분(상호 의존성을 줄임)
      - 서버: API를 제공하고, API 요청 시 비지니스 로직 처리와 데이터 저장을 책임
      - 클라이언트 : 사용자 인증, 상태(세션, 로그인 정보)관리와 서버 리소스 요청을 책임지는 구조로 역할 구분
   - 무상태(Stateless) : REST 서버는 작업을 위한 상태정보(세션, 쿠키 등)를 관리하지 않아야함, 시스템 영향없이 관리 및 업데이트 가능
   - 캐쉬(Cacheable) : HTTP 웹표준으로 HTTP가 가진 캐싱 기능이 적용됨
   - 계층화(Layered System) : 서버를 다중 계층으로 구성할 수 있음, 비지니스 로직을 수행하는 API 서버와 그 앞단에서 사용자 인증, 암호화, 로드밸런싱 등의 계층을 추가해 구조상의 유연성 제공
   - 인터페이스 일관성(Uniform Interface) : 아키텍처를 단순화하고 분리해 각 부분을 독립적으로 발전시킬 수 있음 
      * 위 제약조건을 준수하는 웹 서비스를 RestFul 하다고 한다.
 
 - REST API
   - REST 기반으로 서비스 API를 구현한 것 
   - 최근 Open API, 마이크로 서비스 등을 제공하는 업체 대부분은 REST API를 제공
   - REST는 HTTP 표준을 기반으로 구현하므로, HTTP를 지원하는 프로그램 언어로 클라이언트, 서버를 구현할 수 있음
 
 - REST 주요 구성요소
   - 리소스 : 접근할 대상, URI를 통해 식별
   - 메소드 : 리소스에 대한 행위, 표준 HTTP 메소드에 따라 자원에 접근(생성, 조회, 수정, 삭제)
   - 메시지 : HTTP 해더와 바디에 포함된 메시지는 메시지를 처리하기 위한 충분한 정보를 포함
 
